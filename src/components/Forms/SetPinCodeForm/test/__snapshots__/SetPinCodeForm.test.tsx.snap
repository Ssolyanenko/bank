// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SetPinCodeForm /> should make snapshot of the component 1`] = `
<Formik
  initialValues={
    {
      "newPin": "",
      "newPinConfirm": "",
    }
  }
  onSubmit={[Function]}
  validationSchema={
    ObjectSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_excludedEdges": [],
      "_mutate": undefined,
      "_nodes": [
        "newPin",
        "newPinConfirm",
      ],
      "_sortErrors": [Function],
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "conditions": [],
      "deps": [],
      "exclusiveTests": {},
      "fields": {
        "newPin": StringSchema {
          "_blacklist": ReferenceSet {
            "list": Set {},
            "refs": Map {},
          },
          "_blacklistError": undefined,
          "_typeError": [Function],
          "_whitelist": ReferenceSet {
            "list": Set {},
            "refs": Map {},
          },
          "_whitelistError": undefined,
          "conditions": [],
          "deps": [],
          "exclusiveTests": {
            "matches": false,
            "min": true,
            "required": true,
          },
          "spec": {
            "abortEarly": true,
            "nullable": false,
            "presence": "required",
            "recursive": true,
            "strict": false,
            "strip": false,
          },
          "tests": [
            [Function],
            [Function],
            [Function],
          ],
          "transforms": [
            [Function],
          ],
          "type": "string",
        },
        "newPinConfirm": StringSchema {
          "_blacklist": ReferenceSet {
            "list": Set {},
            "refs": Map {},
          },
          "_blacklistError": undefined,
          "_typeError": [Function],
          "_whitelist": ReferenceSet {
            "list": Set {},
            "refs": Map {},
          },
          "_whitelistError": undefined,
          "conditions": [
            Condition {
              "fn": [Function],
              "refs": [
                Reference {
                  "getter": [Function],
                  "isContext": false,
                  "isSibling": true,
                  "isValue": false,
                  "key": "newPin",
                  "map": undefined,
                  "path": "newPin",
                },
              ],
            },
          ],
          "deps": [
            "newPin",
          ],
          "exclusiveTests": {
            "matches": false,
            "min": true,
            "required": true,
          },
          "spec": {
            "abortEarly": true,
            "nullable": false,
            "presence": "required",
            "recursive": true,
            "strict": false,
            "strip": false,
          },
          "tests": [
            [Function],
            [Function],
            [Function],
          ],
          "transforms": [
            [Function],
          ],
          "type": "string",
        },
      },
      "spec": {
        "abortEarly": true,
        "nullable": false,
        "presence": "optional",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": [],
      "transforms": [
        [Function],
      ],
      "type": "object",
    }
  }
>
  [Function]
</Formik>
`;
